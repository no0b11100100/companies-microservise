version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka
    environment:
      HTTP_HOST: 0.0.0.0
      HTTP_PORT: 8080
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: companiesdb_test
      DB_USER: root
      DB_PASSWORD: password
      KAFKA_BROKER: kafka:9092
    networks:
      - app-network

  db:
    image: mysql:8.0
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: companiesdb_test
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  testapp:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      - app
      - db
      - kafka
    networks:
      - app-network
    environment:
      HTTP_HOST: app
      HTTP_PORT: 8080
      KAFKA_BROKER: kafka:9092

volumes:
  db_data:

networks:
  app-network: