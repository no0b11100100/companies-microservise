version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka
    environment:
      HTTP_HOST: 0.0.0.0
      HTTP_PORT: 8080
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: companiesdb
      DB_USER: root
      DB_PASSWORD: password
      KAFKA_BROKER: kafka:9092
    networks:
      - app-network

  db:
    image: mysql:8.0
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: companiesdb
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network
  
  mysqld-exporter:
    image: prom/mysqld-exporter
    environment:
      - DATA_SOURCE_NAME=root:password@(db:3306)/
    ports:
      - "9104:9104"
    depends_on:
      - db
    networks:
      - app-network

  kafka-exporter:
    image: danielqsj/kafka-exporter
    ports:
      - "9308:9308"
    environment:
      - KAFKA_SERVER=kafka:9092
    depends_on:
      - kafka
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./cmd/cfg/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - app
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - app-network

volumes:
  db_data:
  grafana-storage:

networks:
  app-network: