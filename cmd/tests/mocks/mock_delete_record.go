// Code generated by MockGen. DO NOT EDIT.
// Source: deleteRecordHandler.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockdeleteRecordDB is a mock of deleteRecordDB interface.
type MockdeleteRecordDB struct {
	ctrl     *gomock.Controller
	recorder *MockdeleteRecordDBMockRecorder
}

// MockdeleteRecordDBMockRecorder is the mock recorder for MockdeleteRecordDB.
type MockdeleteRecordDBMockRecorder struct {
	mock *MockdeleteRecordDB
}

// NewMockdeleteRecordDB creates a new mock instance.
func NewMockdeleteRecordDB(ctrl *gomock.Controller) *MockdeleteRecordDB {
	mock := &MockdeleteRecordDB{ctrl: ctrl}
	mock.recorder = &MockdeleteRecordDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockdeleteRecordDB) EXPECT() *MockdeleteRecordDBMockRecorder {
	return m.recorder
}

// DeleteRecord mocks base method.
func (m *MockdeleteRecordDB) DeleteRecord(arg0 uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRecord", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteRecord indicates an expected call of DeleteRecord.
func (mr *MockdeleteRecordDBMockRecorder) DeleteRecord(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRecord", reflect.TypeOf((*MockdeleteRecordDB)(nil).DeleteRecord), arg0)
}
